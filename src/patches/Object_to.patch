::host Object
::type <T>(targetConstructor: Function) => T
::syms to as

::docn

Converts an object of one type to another type.

Supported conversions:
- `Set` -> `Array`
- `Array` -> `Set`

```js
const items = [1, 1, 2, 2, 3, 3];
const uniq = items[$to](Set)[$to](Array);
console.log(uniq);  // [1, 2, 3]
```

::impl

function(toType) {
  const fromType = Object.getPrototypeOf(this).constructor;
  if (fromType === Array && toType === Set)
    return new Set(this);
  if (fromType === Set && toType === Array)
    return Array.from(this);
  throw Error(`Unknown conversion ${fromType.name} to ${toType.name}.`);
}

::test

it('Array -> Set', () => {
  const items = [1, 1, 2, 2, 3, 3];
  const set = items[$.to](Set);
  expect(set).toEqual(new Set([1, 2, 3]));
});

it('Set -> Array', () => {
  const items = new Set([1, 2, 3]);
  const array = items[$.to](Array);
  expect(array).toEqual([1, 2, 3]);
});
